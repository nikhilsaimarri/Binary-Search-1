// Find the row linearly where the last element is greater than or equal to the target.
// Do binary search on that row only.


// time O(m+log n)
// space o(1)


class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int m = matrix.length;
        int n = matrix[0].length;

        int row = -1;
        for (int i = 0; i < m; i++) {
            if (matrix[i][n - 1] >= target) {
                row = i;
                break;
            }
        }

        if (row == -1) return false;

        int low = 0, high = n - 1;
        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (matrix[row][mid] == target) {
                return true;
            } else if (matrix[row][mid] > target) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }

        return false;
    }
}
